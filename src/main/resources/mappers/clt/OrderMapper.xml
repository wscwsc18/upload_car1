<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fssoft.freight.dao.persistence.dao.OrderMapper">
  <resultMap id="BaseResultMap" type="com.fssoft.freight.dao.persistence.entity.Order">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="no" jdbcType="VARCHAR" property="no" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
      <result column="goods_user_id" jdbcType="INTEGER" property="goodsUserId" />
    <result column="status" jdbcType="INTEGER" property="status" />
      <result column="is_review" jdbcType="INTEGER" property="isReview" />
    <result column="is_deduct" jdbcType="TINYINT" property="isDeduct" />
    <result column="is_examine" jdbcType="TINYINT" property="isExamine" />
    <result column="is_exception" jdbcType="TINYINT" property="isException" />
    <result column="overtime" jdbcType="INTEGER" property="overtime" />
    <result column="deduct_money" jdbcType="DECIMAL" property="deductMoney" />
    <result column="real_money" jdbcType="DECIMAL" property="realMoney" />
      <result column="service_money" jdbcType="DECIMAL" property="serviceMoney" />
      <result column="manage_money" jdbcType="DECIMAL" property="manageMoney" />
      <result column="lose_money" jdbcType="DECIMAL" property="loseMoney" />
    <result column="goods_load_province_id" jdbcType="INTEGER" property="goodsLoadProvinceId" />
    <result column="goods_load_city_id" jdbcType="INTEGER" property="goodsLoadCityId" />
      <result column="goods_load_name" jdbcType="VARCHAR" property="goodsLoadName" />
      <result column="goods_unload_name" jdbcType="VARCHAR" property="goodsunLoadName" />
    <result column="goods_unload_province_id" jdbcType="INTEGER" property="goodsUnloadProvinceId" />
    <result column="goods_unload_city_id" jdbcType="INTEGER" property="goodsUnloadCityId" />
    <result column="is_publish" jdbcType="TINYINT" property="isPublish" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>

    <select id="queryOrderList" resultType="com.fssoft.freight.api.result.modules.order.OrderListResult">
        SELECT
            o.id ,
            o.no ,
            wd.dict_value as orderType,
            o.status,
             (SELECT dof1.create_time FROM dz_order_file AS dof1 WHERE o.id = dof1.order_id AND dof1.type = 1 limit 1 ) AS goodsUnLoadTime,
             dg.goods_load_time as goodsLoadTime,
            o.is_exception isException,
            ddc.car_no as carNo,
            du.phone as driverPhone,
            dud.username as driverName,
            dus.company_name as goodsCompany,
            dus.contacts_name as contacts,
            o.create_time as createTime,
            dus.contacts_phone as contactsPhone,
            o.is_upload isUpload,
            o.is_electr_upload isElectrUpload
        FROM dz_order as o
            LEFT JOIN dz_goods as dg on o.goods_id = dg.id
            LEFT JOIN wt_dict as wd ON dg.goods_type_id = wd.id
            LEFT JOIN dz_user_shipper as dus on dus.user_id = dg.user_id
			LEFT JOIN dz_goods_user as dgu ON o.goods_user_id = dgu.id
			LEFT JOIN dz_user as du ON dgu.user_id = du.id
			LEFT JOIN dz_user as duu on duu.id = o.goods_user_id
			LEFT JOIN dz_user_driver as dud ON dgu.user_id = dud.user_id
			LEFT JOIN dz_driver_car as ddc ON dgu.user_car_id = ddc.id
        WHERE 1=1
            <if test="orderNo != null and orderNo != ''">
                AND o.no like concat('%', #{orderNo}, '%')
            </if>
            <if test="driverPhone != null and driverPhone != ''">
                AND du.phone like concat('%', #{driverPhone}, '%')
            </if>
            <if test="goodsPhone != null and goodsPhone != ''">
                AND duu.phone like concat('%', #{goodsPhone}, '%')
            </if>
            <if test="carNo != null and carNo != ''">
                AND ddc.car_no like concat('%', #{carNo}, '%')
            </if>
            <if test="goodsCompany != null and goodsCompany != ''">
                AND dus.company_name like concat('%', #{goodsCompany}, '%')
            </if>
            <if test="status != null and status != '' || status == 0">
                AND o.status = #{status}
            </if>
            <if test="type != null and type != ''  || type == 0">
                AND wd.id = #{type}
            </if>
            <if test="orderTimeRangeStart != null and orderTimeRangeStart != ''">
                AND o.create_time &gt;= #{orderTimeRangeStart}
            </if>
            <if test="orderTimeRangeEnd != null and orderTimeRangeEnd != ''">
                AND o.create_time &lt;= #{orderTimeRangeEnd}
            </if>
            <if test="isUpload != null and isUpload != ''">
                AND o.is_upload = #{isUpload}
            </if>
            AND o.is_delete = 0
        <if test="orderSql != null and orderSql != ''">
            ORDER BY o.${orderSql}
        </if>
        <if test="orderSql == null || orderSql == ''">
            ORDER BY o.create_time DESC
        </if>
    </select>



    <select id="findOrderCount" resultType="com.fssoft.freight.api.result.modules.order.OrderCountResult">
        SELECT
        o.id ,
        o.no ,
        wd.dict_value as goodsType,
        o.status,
        (select CONCAT( dua.province,dua.city) from dz_user_address as dua where dua.id=dg.load_address_id and dua.is_delete=0) as goodsLoadPC,
        (select CONCAT( dua.province,dua.city) from dz_user_address as dua where dua.id=dg.unload_address_id and dua.is_delete=0) as goodsUnloadPC,
        dg.goods_price as goodsPrice,
        ddc.car_no as carNo,
        du.phone as driverPhone,
        dud.username as driverName,
        dus.company_name as goodsCompany,
        dus.contacts_name as contacts,
        dus.contacts_phone as contactsPhone,
        o.goods_load_name AS goodsLoad,
        o.goods_unload_name AS goodsUnload,
        o.create_time AS createTime,
        o.service_money AS platformFee,
        o.manage_money AS proportionOfDispatchFee,
        (case when di.id &gt; 0 then di.status else 0 end)  as isInvoice,
        dg.goods_price_car AS goodsPriceCar,
        (SELECT num FROM dz_order_file AS dof WHERE o.id = dof.order_id AND dof.type = 0 AND dof.category = 1 ) AS primaryNum,
        (SELECT num FROM dz_order_file AS dof1 WHERE o.id = dof1.order_id AND dof1.type = 1 AND dof1.category = 1 ) AS unloadingNum
        FROM dz_order as o
        LEFT JOIN dz_goods_user as dgu on o.goods_user_id  = dgu.id
        LEFT JOIN dz_goods as dg on o.goods_id = dg.id
        LEFT JOIN wt_dict as wd ON dg.goods_type_id = wd.id
        LEFT JOIN dz_driver_car as ddc ON ddc.id = dgu.user_car_id
        LEFT JOIN dz_user as du on du.id = o.user_id
        LEFT JOIN dz_user as duu on duu.id = o.goods_user_id
        LEFT JOIN dz_user_driver as dud on dud.user_id = o.user_id
        LEFT JOIN dz_user_shipper as dus on dus.user_id =dg.user_id
        LEFT JOIN dz_invoice as di on o.id=di.order_id and di.is_publish=1 and di.is_delete=0
        WHERE 1=1
          <if test="isInvoice != null and isInvoice != ''">
             <choose >
                <when test="isInvoice == 0">
                   AND (dg.is_invoice =#{isInvoice} or di.status=#{isInvoice})
                </when>
                <when test="isInvoice == 1">
                  AND dg.is_invoice =#{isInvoice} AND di.status=#{isInvoice}
                </when>
               
            </choose>
        </if>
                <if test="countTimeRangeStart != null and countTimeRangeStart != ''">
                AND o.update_time &gt;= #{countTimeRangeStart}
            </if>
            <if test="countTimeRangeEnd != null and countTimeRangeEnd != ''">
                  AND o.update_time &lt;=  #{countTimeRangeEnd}
            </if>
        <if test="orderNo != null and orderNo != ''">
            AND o.no like '%${orderNo}%'
        </if>
        <if test="driverPhone != null and driverPhone != ''">
            AND du.phone like '%${driverPhone}%'
        </if>
        <if test="goodsPhone != null and goodsPhone != ''">
            AND dus.contacts_phone like '%${goodsPhone}%'
        </if>
        <if test="carNo != null and carNo != ''">
            AND ddc.car_no like '%${carNo}%'
        </if>
          <if test="driverName != null and driverName != ''">
            AND dud.username like '%${driverName}%'
        </if>
          <if test="contactsPhone != null and contactsPhone != ''">
            AND dus.contacts_phone like '%${contactsPhone}%'
        </if>
        <if test="goodsCompany != null and goodsCompany != ''">
           AND  ((dus.contacts_name like '%${goodsCompany}%' and dus.shipper_type=2) or (dus.company_name like '%${goodsCompany}%' and dus.shipper_type=1))
        </if>
        <if test="loadAreaProvice != null and loadAreaProvice != '' and loadAreaProvice != 0">
            AND o.goods_load_province_id = #{loadAreaProvice}
        </if>
        <if test="loadAreaCity != null and loadAreaCity != '' and loadAreaCity != 0">
            AND o.goods_load_city_id = #{loadAreaCity}
        </if>
        <if test="loadArea != null and loadArea != '' and loadArea != 0">
            AND o.goods_load_id = #{loadArea}
        </if>
        <if test="unloadAreaProvice != null and unloadAreaProvice != '' and unloadAreaProvice != 0">
            AND o.goods_unload_province_id = #{unloadAreaProvice}
        </if>
        <if test="unloadAreaCity != null and unloadAreaCity != '' and unloadAreaCity != 0">
            AND o.goods_unload_city_id = #{unloadAreaCity}
        </if>
        <if test="unloadArea != null and unloadArea != '' and unloadArea != 0">
            AND o.goods_unload_id = #{unloadArea}
        </if>
        <if test="status != null and status != -1">
            AND o.status = #{status}
        </if>
        <if test="type != null and type != ''">
            AND dg.goods_type_id = #{type}
        </if>
        <if test="userId != null and userId != ''">
             <choose >
                <when test="userType == 0">
                    AND dg.user_id =#{userId}
                </when>
                <when test="userType == 1">
                  AND o.user_id =#{userId}
                </when>
                <otherwise>
                    AND 1=0
                </otherwise>
            </choose>
        </if>
        AND o.is_delete = 0
        <if test="orderSql != null and orderSql != ''">
            ORDER BY o.${orderSql}
        </if>
    </select>
    
    
    <select id="totalCount" resultType="com.fssoft.freight.api.result.modules.order.OrderTotalCountResult">
        SELECT
       	count(o.id) as totalCount,
       	sum(cast(o.real_money as DECIMAL(18,2))) as totalFeightMoney,
      	sum(case when dg.goods_weight_unit='吨' then cast(dg.goods_weight as DECIMAL(18,2)) else 0 end ) as totalWeight,
       	sum(case when dg.goods_weight_unit='方' then cast(dg.goods_weight as DECIMAL(18,2)) else 0 end ) as totalVolume,
		sum(case when dg.is_invoice=1 then cast(o.manage_money as DECIMAL(18,2)) else 0 end ) as totalProportionOfDispatchFee,
      	sum(case when dg.is_invoice=1 then cast((di.money+di.freight_moeny) as DECIMAL(18,2)) else 0 end ) as totalInvoiceMoney
        FROM dz_order as o
        LEFT JOIN dz_goods_user as dgu on o.goods_user_id  = dgu.id
        LEFT JOIN dz_goods as dg on o.goods_id = dg.id
        LEFT JOIN wt_dict as wd ON dg.goods_type_id = wd.id
        LEFT JOIN dz_driver_car as ddc ON ddc.id = dgu.user_car_id
        LEFT JOIN dz_user as du on du.id = o.user_id
        LEFT JOIN dz_user as duu on duu.id = o.goods_user_id
        LEFT JOIN dz_user_driver as dud on dud.user_id = o.user_id
        LEFT JOIN dz_user_shipper as dus on dus.user_id = o.goods_user_id
        LEFT JOIN dz_invoice as di on o.id=di.order_id and di.is_publish=1 and di.is_delete=0 and di.status=1
        WHERE 1=1
                 <if test="isInvoice != null and isInvoice != ''">
             <choose >
                <when test="isInvoice == 0">
                    AND (dg.is_invoice =#{isInvoice} or di.status=#{isInvoice})
                </when>
                <when test="isInvoice == 1">
                  AND dg.is_invoice =#{isInvoice} AND di.status=#{isInvoice}
                </when>
               
            </choose>
        </if>
        <if test="countTimeRangeStart != null and countTimeRangeStart != ''">
                AND o.update_time &gt;= #{countTimeRangeStart}
            </if>
            <if test="countTimeRangeEnd != null and countTimeRangeEnd != ''">
                  AND o.update_time &lt;=  #{countTimeRangeEnd}
            </if>
       <if test="orderNo != null and orderNo != ''">
            AND o.no like '%${orderNo}%'
        </if>
        <if test="driverPhone != null and driverPhone != ''">
            AND du.phone like '%${driverPhone}%'
        </if>
        <if test="goodsPhone != null and goodsPhone != ''">
            AND dus.contacts_phone like '%${goodsPhone}%'
        </if>
        <if test="carNo != null and carNo != ''">
            AND ddc.car_no like '%${carNo}%'
        </if>
          <if test="driverName != null and driverName != ''">
            AND dud.username like '%${driverName}%'
        </if>
          <if test="contactsPhone != null and contactsPhone != ''">
            AND dus.contacts_phone like '%${contactsPhone}%'
        </if>
        <if test="goodsCompany != null and goodsCompany != ''">
             AND  ((dus.contacts_name like '%${goodsCompany}%' and dus.shipper_type=2) or (dus.company_name like '%${goodsCompany}%' and dus.shipper_type=1))
        </if>
        <if test="loadAreaProvice != null and loadAreaProvice != '' and loadAreaProvice != 0">
            AND o.goods_load_province_id = #{loadAreaProvice}
        </if>
        <if test="loadAreaCity != null and loadAreaCity != '' and loadAreaCity != 0">
            AND o.goods_load_city_id = #{loadAreaCity}
        </if>
        <if test="loadArea != null and loadArea != '' and loadArea != 0">
            AND o.goods_load_id = #{loadArea}
        </if>
        <if test="unloadAreaProvice != null and unloadAreaProvice != '' and unloadAreaProvice != 0">
            AND o.goods_unload_province_id = #{unloadAreaProvice}
        </if>
        <if test="unloadAreaCity != null and unloadAreaCity != '' and unloadAreaCity != 0">
            AND o.goods_unload_city_id = #{unloadAreaCity}
        </if>
        <if test="unloadArea != null and unloadArea != '' and unloadArea != 0">
            AND o.goods_unload_id = #{unloadArea}
        </if>
        <if test="status != null and status != -1">
            AND o.status = #{status}
        </if>
        <if test="type != null and type != ''">
            AND dg.goods_type_id = #{type}
        </if>
            <if test="userId != null and userId != ''">
             <choose >
                <when test="userType == 0">
                    AND dg.user_id =#{userId}
                </when>
                <when test="userType == 1">
                  AND o.user_id =#{userId}
                </when>
                <otherwise>
                    AND 1=0
                </otherwise>
            </choose>
        </if>
        AND o.is_delete = 0
    </select>
    



    <select id="fingGoodsByOrderId" resultMap="goods">
        SELECT
        dg.*
        FROM dz_order as o
        LEFT JOIN dz_goods as dg ON o.goods_id = dg.id
        WHERE 1=1
        AND o.is_delete = 0 AND o.id = #{id}
    </select>
    
    <select id="findOrderNo4Etcinvoice" resultType="java.lang.String">
      SELECT
	dd.no from dz_order dd
	WHERE
	dd.is_delete = 0
	AND dd.is_publish = 1
	AND dd. STATUS IN (1, 2, 3, 4, 5)
	AND dd.no NOT IN ( SELECT waybill_num FROM dz_etcinvoice)
    </select>


    <resultMap id="goods" type="com.fssoft.freight.dao.persistence.entity.Goods">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="user_id" jdbcType="INTEGER" property="userId" />
        <result column="load_address_id" jdbcType="INTEGER" property="loadAddressId" />
        <result column="unload_address_id" jdbcType="INTEGER" property="unloadAddressId" />
        <result column="goods_load_time" jdbcType="TIMESTAMP" property="goodsLoadTime" />
        <result column="goods_publish_type" jdbcType="TINYINT" property="goodsPublishType" />
        <result column="goods_type_id" jdbcType="INTEGER" property="goodsTypeId" />
        <result column="goods_weight" jdbcType="VARCHAR" property="goodsWeight" />
        <result column="goods_price" jdbcType="DECIMAL" property="goodsPrice" />
        <result column="goods_real_price" jdbcType="DECIMAL" property="goodsRealPrice" />
        <result column="lose_weigh" jdbcType="VARCHAR" property="loseWeigh" />
        <result column="is_auto" jdbcType="TINYINT" property="isAuto" />
        <result column="car_container_id" jdbcType="INTEGER" property="carContainerId" />
        <result column="car_length_id" jdbcType="INTEGER" property="carLengthId" />
        <result column="memo" jdbcType="VARCHAR" property="memo" />
        <result column="goods_num" jdbcType="INTEGER" property="goodsNum" />
        <result column="goods_limit_day" jdbcType="INTEGER" property="goodsLimitDay" />
        <result column="goods_overtime_price" jdbcType="DECIMAL" property="goodsOvertimePrice" />
        <result column="is_invoice" jdbcType="TINYINT" property="isInvoice" />
        <result column="status" jdbcType="TINYINT" property="status" />
        <result column="is_publish" jdbcType="TINYINT" property="isPublish" />
        <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    </resultMap>

    <select id="findOrderInfo" resultMap="orderInfo">
     SELECT o.id,
     o.no,
      o.status,
      dus.company_name,
      dus.contacts_phone,
       dus.contacts_name,
      (SELECT dof1.update_time FROM dz_order_file AS dof1 WHERE o.id = dof1.order_id AND dof1.type = 0 and dof1.category=0 limit 1 ) AS goods_load_time,
      (SELECT dof2.update_time FROM dz_order_file AS dof2 WHERE o.id = dof2.order_id AND dof2.type = 1 and dof2.category=0 limit 1 ) AS goods_unload_time,
       dg.id as goods_id,
       o.goods_user_id,
       o.reason,
        o.reason_type,
         o.is_review,
            o.is_exception,
      o.goods_load_name as load_address ,
         duz.contacts AS load_address_user_name,
            duz.phone AS load_address_user_phone,
      o.goods_unload_name as unload_address,
       duzz.contacts AS unload_address_user_name,
            duzz.phone AS unload_address_user_phone,
       o.overtime,
        o.deduct_money,
        o.real_money,
        o.lose_money,
        dg.goods_weight,
        du2.phone as driverPhone,
        dud.username,
        wd.dict_value as goods_type,
         dg.memo, dgu.status,
        wd2.dict_value as car_container,
        wd3.dict_value as car_length,
        dg.car_container_id as carContainerIds,
        dg.car_length_id as carLengthIds,
         goods_price,
         ddc.car_no,
         ddc.id as car_id,
         dg.is_invoice AS invoice_status,
        dg.goods_weight_unit,
         dg.goods_real_price,
         dg.goods_price_car,
          dg.lose_weigh,
          dg.goods_limit_day,
           dg.goods_overtime_price,
           o.is_examine,
           dg.manager_price,
          dg.freeze_price,
            dg.service_price,
            (case WHEN o.status &lt; 3 THEN  dgu.quoted_price ELSE  o.real_money END) AS goods_real_price_car,
        (case WHEN doe.is_confirm = 0 THEN 0 WHEN doe.is_confirm = 1 AND ISNULL(doeh.id)=1 THEN 1 WHEN doe.is_confirm = 1 AND ISNULL(doeh.id)=0 THEN 2 END)AS exception_status,
        dg.contract_code,
       dcc.company_name as send_owner_name,
       dcc2.company_name as rec_owner_name,
       dg.goods_name,
       dg.goods_publish_type
        FROM dz_order as o
        LEFT JOIN dz_goods as dg  ON o.goods_id = dg.id
        LEFT JOIN dz_user_address duz on duz.id=dg.load_address_id
        LEFT JOIN dz_user_address duzz on duzz.id=dg.unload_address_id
        LEFT JOIN dz_goods_user as dgu ON dgu.id = o.goods_user_id
        LEFT JOIN dz_user as du2 ON o.user_id = du2.id
        LEFT JOIN dz_user_driver as dud ON dud.user_id = du2.id
        LEFT JOIN dz_driver_car as ddc on dgu.user_car_id = ddc.id
        LEFT JOIN dz_user as du ON dg.user_id = du.id
        LEFT JOIN dz_user_shipper as dus ON dg.user_id = dus.user_id
        LEFT JOIN dz_order_exception AS doe ON o.id = doe.order_id
        LEFT JOIN dz_order_exception_handle AS doeh ON doe.id = doeh.order_exception_id
        LEFT JOIN wt_dict as wd ON dg.goods_type_id = wd.id
        LEFT JOIN wt_dict as wd2 ON ddc.car_container_id = wd2.id
        LEFT JOIN wt_dict as wd3 ON ddc.car_length_id = wd3.id
        LEFT JOIN dz_invoice di ON o.id = di.order_id
         LEFT JOIN dz_cooperative_company as dcc ON dcc.id = dg.send_owner_id
        LEFT JOIN dz_cooperative_company as dcc2 ON dcc.id = dg.rec_owner_id
        WHERE 1 = 1
        AND o.is_publish = 1  AND o.id = #{id}
        GROUP BY o.id
    </select>

    <resultMap id="orderInfo" type="com.fssoft.freight.api.result.api.result.order.ApiOrderResult">
        <id column="id"  property="id" />
        <result column="no"  property="no" />
        <result column="company_name"  property="goodsCompanyName" />
        <result column="contacts_phone"  property="goodsUserPhone" />
        <result column="contacts_name"  property="goodsUserName" />
        <result column="goods_user_id"  property="goodsUserId" />
        <result column="goods_load_time"  property="goodsLoadTime" />
        <result column="lose_weigh"  property="loseWeigh" />
        <result column="load_address"  property="loadArea" />
        <result column="unload_address"  property="unLoadArea" />
        <result column="goods_weight"  property="goodsWeight" />
        <result column="goods_type"  property="goodsType" />
        <result column="car_container"  property="carContainer" />
        <result column="car_length"  property="carLength" />
        <result column="goods_price"  property="goodsPrice" />
		<result column="goods_id"  property="goodsId" />
        <result column="reason_type"  property="reasonType" />
        <result column="reason"  property="reason" />
        <result column="goods_price_car" property="goodsPriceCar"/>
        <result column="goods_real_price_car" property="goodsRealPriceCar"/>
        <result column="goods_weight_unit"  property="goodsWeightUnit" />
        <result column="goods_real_price"  property="goodsRealPrice" />
        <result column="goods_limit_day"  property="goodsLimitDay" />
        <result column="goods_overtime_price"  property="goodsOvertimePrice" />
        <result column="memo"  property="memo" />
        <result column="status"  property="status" />
        <result column="driverPhone"  property="driverPhone" />
        <result column="username"  property="driverName" />
        <result column="overtime"  property="overtime" />
        <result column="deduct_money"  property="deductMoney" />
        <result column="real_money"  property="realMoney" />
        <result column="lose_money"  property="loseMoney" />
        <result column="is_examine" property="isExamine"/>
        <result column="exception_status" property="exceptionStatus"/>
        <result column="car_no" property="carNo"/>
        <result column="car_id" property="carId"/>
        <result column="invoice_status" property="invoiceStatus"/>

        <result column="freeze_price" property="total"/>
        <result column="manager_price" property="price"/>
        <result column="service_price" property="servicePrice"/>
        <result column="goods_price_car" property="freezePrice"/>
        <result column="is_exception" property="isException"/>

        <result column="is_review" property="isReview"/>
        
        <result column="rec_owner_name"  property="recOwnerName" />
    	<result column="send_owner_name"  property="sendOwnerName" />
    	<result column="goods_name"  property="goodsName" />
    	<result column="contract_code"  property="contractCode" />
    	 <result column="goods_unload_time" property="goodsUnloadTime"/>
    	 <result column="goods_publish_type" property="goodsPublishType"/>
    	 
    	   <result column="load_address_user_name" property="loadAddressUserName"/>
        <result column="load_address_user_phone" property="loadAddressUserPhone"/>
        <result column="unload_address_user_name" property="unloadAddressUserName"/>
        <result column="unload_address_user_phone" property="unloadAddressUserPhone"/>
    </resultMap>





    <select id="findOrderByUser" resultType="java.lang.Integer">
        SELECT o.id
        FROM dz_order as o
        WHERE 1 = 1
        AND o.is_publish = 1 AND o.is_delete = 0 AND o.user_id = #{userId}
        and o.status in (0,1,2,3,6) order by create_time desc limit 1
    </select>

    <select id="findOrderListByUser" resultMap="orderList">
        SELECT o.id,
       (SELECT dof.create_time FROM dz_order_file AS dof WHERE o.id = dof.order_id AND dof.type = 0  limit 1) as goods_load_time,
        duz.full_address as load_address ,
        duz.province as load_Province,
        duz.city as load_City,
        duzz.full_address as unload_address,
        duzz.province as unload_Province,
        duzz.city as unload_City,
        o.is_review ,
        wd.dict_value as goods_type,
        o.status,
        o.no,
        dg.goods_price,
        dg.id as goods_id,
        dg.goods_price_car,
         (case WHEN o.status &lt; 3 THEN  dgu.quoted_price WHEN o.status=2 AND ISNULL(o.real_money) THEN  dgu.quoted_price ELSE  o.real_money END) AS goods_real_price_car,
        o.is_exception,
        du.phone,
        dud.username,
        ddc.car_no,
        ddc.id as car_id,
        o.is_examine,
        (case WHEN doe.is_confirm = 0 THEN 0 WHEN doe.is_confirm = 1 AND ISNULL(doeh.id)=1 THEN 1 WHEN doe.is_confirm = 1 AND ISNULL(doeh.id)=0 THEN 2 END)AS exception_status,
         (SELECT dof1.create_time FROM dz_order_file AS dof1 WHERE o.id = dof1.order_id AND dof1.type = 1  limit 1 ) AS goods_unload_time
        FROM dz_order as o
        LEFT JOIN  dz_goods as dg ON o.goods_id = dg.id
        LEFT JOIN dz_user_address as duz ON dg.load_address_id = duz.id
        LEFT JOIN dz_user_address as duzz ON dg.unload_address_id = duzz.id
        LEFT JOIN wt_dict as wd ON dg.goods_type_id = wd.id
        LEFT JOIN dz_order_exception AS doe ON o.id = doe.order_id
        LEFT JOIN dz_order_exception_handle AS doeh ON doe.id = doeh.order_exception_id
        LEFT JOIN dz_goods_user as dgu ON o.goods_user_id = dgu.id
        LEFT JOIN dz_user as du ON dgu.user_id = du.id
        LEFT JOIN dz_user_driver as dud ON dgu.user_id = dud.user_id
        LEFT JOIN dz_driver_car as ddc ON dgu.user_car_id = ddc.id
        WHERE 1 = 1

        <if test="status != null and status != ''and status != 9 || status == 0">

            <choose >
                <when test="status == 1">
                    AND o.status in (0, 1)
                </when>
                <when test="status == 5">
                    AND o.status in (5, 4)
                </when>
                 <when test="status == 2">
                    AND o.status in (2,3,11)
                </when>
                <otherwise>
                    AND o.status = #{status}
                </otherwise>
            </choose>
        </if>
        <if test="isConfirm != null and isConfirm != '' ||isConfirm == 0">
            AND doe.is_confirm = #{isConfirm}
        </if>
        <if test="no != null and no != ''">
            AND o.no like concat('%', #{no}, '%')
        </if>

        AND o.is_publish = 1 AND o.is_delete = 0  AND o.user_id = #{userId}
        ORDER BY o.create_time desc

    </select>

    <select id="findOrderList" resultMap="orderList">
        SELECT o.id,

       (case when  ISNULL((SELECT dof.create_time FROM dz_order_file AS dof WHERE o.id = dof.order_id AND dof.type = 0  limit 1))   then dg.goods_load_time else (SELECT dof.create_time FROM dz_order_file AS dof WHERE o.id = dof.order_id AND dof.type = 0  limit 1)   end) as goods_load_time,
        duz.full_address as load_address ,
        duz.province as load_Province,
        duz.city as load_City,
        duzz.full_address as unload_address,
        duzz.province as unload_Province,
        duzz.city as unload_City,
        o.is_review ,
        wd.dict_value as goods_type,
        o.status,
        o.no,
        dg.car_length_id,
        dg.car_container_id,
        dg.goods_price,
        dg.id as goods_id,
        dg.goods_price_car,
        o.is_exception,
        du.phone,
        dud.username,
        ddc.car_no,
         ddc.id as car_id,
          (case WHEN o.status &lt; 3 THEN  dgu.quoted_price ELSE  o.real_money END) AS goods_real_price_car,
        o.is_examine,
        (case WHEN doe.is_confirm = 0 THEN 0 WHEN doe.is_confirm = 1 AND ISNULL(doeh.id)=1 THEN 1 WHEN doe.is_confirm = 1 AND ISNULL(doeh.id)=0 THEN 2 END)AS exception_status,
         (SELECT dof1.create_time FROM dz_order_file AS dof1 WHERE o.id = dof1.order_id AND dof1.type = 1 limit 1 ) AS goods_unload_time
        FROM dz_order as o
        LEFT JOIN  dz_goods as dg ON o.goods_id = dg.id
        LEFT JOIN dz_user_address as duz ON dg.load_address_id = duz.id
        LEFT JOIN dz_user_address as duzz ON dg.unload_address_id = duzz.id
        LEFT JOIN wt_dict as wd ON dg.goods_type_id = wd.id
        LEFT JOIN dz_order_exception AS doe ON o.id = doe.order_id
        LEFT JOIN dz_order_exception_handle AS doeh ON doe.id = doeh.order_exception_id
        LEFT JOIN dz_goods_user as dgu ON o.goods_user_id = dgu.id
        LEFT JOIN dz_user as du ON dgu.user_id = du.id
        LEFT JOIN dz_user_driver as dud ON dgu.user_id = dud.user_id
        LEFT JOIN dz_driver_car as ddc ON dgu.user_car_id = ddc.id
        WHERE 1 = 1

        <if test="status != null and status != ''and status != 9 || status == 0">

            <choose >
                <when test="status == 1">
                    AND o.status in (0, 1)
                </when>
                <when test="status == 5">
                    AND o.status in (5, 4)
                </when>
                  <when test="status == 2">
                    AND o.status in (2,3,11)
                </when>
                <otherwise>
                    AND o.status = #{status}
                </otherwise>
            </choose>
        </if>
        AND o.is_publish = 1 AND o.is_delete = 0

        <choose>
            <when test="userId != null and userId != '' ">
                AND o.user_id = #{userId}
            </when>
            <otherwise>
                AND o.user_id in ${list}
            </otherwise>
        </choose>
        ORDER BY o.create_time desc

    </select>

    <select id="findOrderListInShipper" resultMap="orderList">
        SELECT o.id, (SELECT dof.create_time FROM dz_order_file AS dof WHERE o.id = dof.order_id AND dof.type = 0  limit 1) as goods_load_time,
        duz.full_address as load_address ,
        duz.province as load_Province,
        duz.city as load_City,
        duzz.full_address as unload_address,
        duzz.province as unload_Province,
        duzz.city as unload_City,
        o.reason, o.reason_type,
        o.is_review,
        wd.dict_value as goods_type,
        o.status,
        o.no,
        dg.goods_price,
        dg.id as goods_id,
        dg.goods_price_car,
        o.is_exception,
        du.phone,
        dud.username,
        ddc.car_no,
         ddc.id as car_id,
        o.is_examine,
          (case WHEN o.status &lt; 3 THEN  dgu.quoted_price ELSE  o.real_money END) AS goods_real_price_car,
        (case WHEN doe.is_confirm = 0 THEN 0 WHEN doe.is_confirm = 1 AND ISNULL(doeh.id) = 1 THEN 1 WHEN doe.is_confirm = 1 AND ISNULL(doeh.id) = 0 THEN 2 END)AS exception_status,
         (SELECT dof1.create_time FROM dz_order_file AS dof1 WHERE o.id = dof1.order_id AND dof1.type = 1 limit 1) AS goods_unload_time
        FROM dz_order as o
        LEFT JOIN  dz_goods as dg ON o.goods_id = dg.id
        LEFT JOIN dz_user_address as duz ON dg.load_address_id = duz.id
        LEFT JOIN dz_user_address as duzz ON dg.unload_address_id = duzz.id
        LEFT JOIN wt_dict as wd ON dg.goods_type_id = wd.id
        LEFT JOIN dz_order_exception AS doe ON o.id = doe.order_id
        LEFT JOIN dz_order_exception_handle AS doeh ON doe.id = doeh.order_exception_id
        LEFT JOIN dz_goods_user as dgu ON o.goods_user_id = dgu.id
        LEFT JOIN dz_user as du ON dgu.user_id = du.id
        LEFT JOIN dz_user_driver as dud ON dgu.user_id = dud.user_id
        LEFT JOIN dz_driver_car as ddc ON dgu.user_car_id = ddc.id
        WHERE 1 = 1

        <if test="status != null and status != '' and status != 9 and status != 11 and status != 5 and status !=2 || status == 0">
            AND o.status = #{status}
        </if>
        <if test="status == 11">
            AND o.status = 11 AND o.is_examine = 1
        </if>
        <if test="status == 5">
            AND o.status in (5, 4)
        </if>
         <if test="status == 2">
         <!--前端选项卡是待结算的，显示待结算、待审核和审核未通过记录 -->
                 AND (o.status in (2,3) OR o.is_examine = 0)
         </if>
        <if test="no != null and no != ''">
            AND o.no like concat('%', #{no}, '%')
        </if>

        <if test="isConfirm != null and isConfirm != '' ||isConfirm == 0">
            AND doe.is_confirm = #{isConfirm}
        </if>

        AND o.is_publish = 1 AND o.is_delete = 0

        <choose>
            <when test="receiveId != null and receiveId != '' ">
                AND dg.receive_user_id = #{receiveId}
            </when>
            <when test="userId != null and userId != '' ">
                AND dg.user_id = #{userId}
            </when>
            <otherwise>
                AND dg.user_id in ${list}
            </otherwise>
        </choose>
        ORDER BY o.create_time desc

    </select>

    <resultMap id="orderList" type="com.fssoft.freight.api.result.api.result.order.ApiOrderListResult">
        <id column="id"  property="orderId" />
        <result column="no"  property="no" />
        <result column="status"  property="status" />
        <result column="load_address"  property="loadArea" />
        <result column="load_Province"  property="loadProvince" />
        <result column="load_City"  property="loadCity" />
        <result column="unload_address"  property="unLoadArea" />
        <result column="unload_Province"  property="unLoadProvince" />
        <result column="unload_City"  property="unLoadCity" />
        <result column="is_exception"  property="isException" />
        <result column="goods_type"  property="goodsType" />
        <result column="goods_price"  property="goodsPrice" />
        <result column="goods_price_car" property="goodsPriceCar"/>
         <result column="goods_real_price_car" property="goodsRealPriceCar"/>
        <result column="goods_load_time"  property="goodsLoadTime" />
        <result column="username"  property="username" />
        <result column="reason"  property="reason" />
        <result column="reason_type"  property="reasonType" />
        <result column="phone"  property="phone" />
        <result column="car_no"  property="carNo" />
        <result column="car_id"  property="carId" />
        <result column="goods_id"  property="goodsId" />
        <result column="is_examine" property="isExamine"/>
        <result column="is_review" property="isReview"/>
        <result column="exception_status" property="exceptionStatus"/>
        <result column="goods_unload_time" property="goodsUnLoadTime"/>
        <result column="car_length_id" property="carLengthIds"/>
        <result column="car_container_id" property="carContainerIds"/>
    </resultMap>



</mapper>