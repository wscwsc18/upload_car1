<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fssoft.freight.dao.persistence.dao.UserExamineMapper">
  <resultMap id="BaseResultMap" type="com.fssoft.freight.dao.persistence.entity.UserExamine">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="account_id" jdbcType="INTEGER" property="accountId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="is_publish" jdbcType="TINYINT" property="isPublish" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>

    <select id="queryUserExamineList" resultType="com.fssoft.freight.api.result.modules.userExamine.UserExamineResult">
        SELECT
            due.id as id, due.user_id as userId, due.account_id as accountId, due.content as content, due.status as status, due.is_publish as isPublish, due.is_delete as isDelete, due.create_time as createTime, due.update_time as updateTime
        FROM dz_user_examine as due
        WHERE 1=1
            <if test="updateTimeRangeStart != null and updateTimeRangeStart != ''">
                AND due.update_time >= #{updateTimeRangeStart}
            </if>
            <if test="updateTimeRangeEnd != null and updateTimeRangeEnd != ''">
                AND #{updateTimeRangeEnd} >= due.update_time
            </if>
            AND due.is_delete = 0
        <if test="orderSql != null and orderSql != ''">
            ORDER BY due.${orderSql}
        </if>
    </select>

    <select id="findByUserId" resultType="com.fssoft.freight.dao.persistence.entity.UserExamine">
        SELECT *
        FROM dz_user_examine as due
        WHERE due.is_delete = 0 AND due.user_id = #{userId}
    </select>

    <select id="deleteUserExamineListByIdList" >
        update dz_user_examine set is_delete = 1 where id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
</mapper>